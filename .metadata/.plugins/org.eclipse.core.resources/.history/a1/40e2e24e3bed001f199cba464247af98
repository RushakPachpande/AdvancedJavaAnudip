package com.anudip.ems.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.anudip.ems.entity.Employee;
import com.anudip.ems.model.Student;

@RestController
@RequestMapping("/student")
public class EmployeeController {

	private Map<Long, Employee> employeeEntry = new HashMap<>();

	// Constructor to initialize 5 default students
	public EmployeeController() {
		employeeEntry.put(1L, new Employee(1L, "John Doe", "johndoe@email.com", "Software Engineer", "IT", 75000));
        employeeEntry.put(2L, new Employee(2L, "Jane Smith", "janesmith@email.com", "HR Manager", "HR", 68000));
        employeeEntry.put(3L, new Employee(3L, "Alice Brown", "alicebrown@email.com", "Marketing Specialist", "Marketing", 62000));
        employeeEntry.put(4L, new Employee(4L, "Bob White", "bobwhite@email.com", "Sales Executive", "Sales", 55000));
        employeeEntry.put(5L, new Employee(5L, "Charlie Green", "charliegreen@email.com", "Product Manager", "Product", 82000));
	}

	@GetMapping("/check")
	public String check() {
		return "Site is working";
	}

	@GetMapping
	public List<Student> getAll() {
		return new ArrayList<>(studentEntry.values());
	}

	@PostMapping
	public boolean createEntry(@RequestBody Student myEntry) {
		studentEntry.put(myEntry.getId(), myEntry);
		return true;
	}

	@GetMapping("/id/{id}")
	public Student getStudentById(@PathVariable long id) {
		return studentEntry.get(id);
	}

	@DeleteMapping("id/{id}")
	public Student deleteStudentById(@PathVariable long id) {
		return studentEntry.remove(id);
	}

	@PutMapping("id/{id}")
	public Student updateStudentById(@PathVariable long id, @RequestBody Student student) {
		return studentEntry.replace(id, student);
	}

}